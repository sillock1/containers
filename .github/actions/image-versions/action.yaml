---
# yaml-language-server: $schema=https://json.schemastore.org/github-action.json
name: Image Versions
description: Takes an upstream version string and returns various version types

inputs:
  upstream-version:
    description: Upstream Version
    required: true

outputs:
  is-valid-semver:
    description: If version is valid semantic versioning
    value: ${{ steps.version.outputs.is-valid-semver }}
  semantic:
    description: Semantic Version
    value: ${{ steps.version.outputs.semantic }}
  raw:
    description: Raw Version
    value: ${{ steps.version.outputs.raw }}
  upstream:
    description: Upstream Version
    value: ${{ steps.version.outputs.upstream }}

runs:
  using: composite
  steps:
    - name: Setup Node
      uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
      with:
        node-version: 22.x

    - name: Install Semver
      shell: bash
      run: npm install semver

    - name: Determine Image Versions
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      id: version
      with:
        script: |
          const semver = require('semver');

          function calver() {
              const now = new Date();
              return `${now.getFullYear()}.${now.getMonth() + 1}.${now.getDate()}`;
          }

          const upstreamVersion = '${{ inputs.upstream-version }}';
          const parsedSemver = semver.coerce(upstreamVersion, { includePrerelease: true });
          const isValidSemver = parsedSemver !== null;
          const semanticVersion = parsedSemver !== null ? parsedSemver.version : calver();

          core.setOutput('is-valid-semver', isValidSemver);
          core.setOutput('semantic', semanticVersion);
          core.setOutput('upstream', upstreamVersion);
